{"version":3,"sources":["routes/Detail.js","components/Movie.js","routes/Home.js","App.js","index.js"],"names":["Detail","id","useParams","console","log","getMoive","useCallback","a","fetch","json","useEffect","Movie","movieImg","title","summary","genres","src","alt","to","map","g","ropTypes","PropTypes","number","isRequired","string","arrayOf","Home","useState","loading","setLoading","movies","setMovies","getMovies","response","data","movie","medium_cover_image","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAsBeA,MAlBf,WACI,IAAOC,EAAMC,cAAND,GACPE,QAAQC,IAAIH,GAEZ,IAAMI,EAAWC,sBAAW,sBAAC,4BAAAC,EAAA,sEAEfC,MAAM,qDAAD,OAAsDP,IAF5C,8BAGpBQ,OAHoB,OACnBA,EADmB,OAIrBN,QAAQC,IAAIK,GAJS,2CAK3B,CAACR,IAMH,OAJAS,qBAAU,WACNL,MACD,CAACA,IAEG,yC,uBChBX,SAASM,EAAT,GAAuD,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,OAAQd,EAAI,EAAJA,GAC9C,OACA,gCACI,qBAAKe,IAAKJ,EAAUK,IAAKJ,IACzB,6BACI,cAAC,IAAD,CAAMK,GAAE,iBAAYjB,GAApB,SAA2BY,MAE/B,4BAAIC,IACJ,6BACKC,EAAOI,KAAI,SAACC,GAAD,OACZ,6BAAaA,GAAJA,WAMrBT,EAAMU,SAAW,CACbpB,GAAGqB,IAAUC,OAAOC,WACpBZ,SAAUU,IAAUG,OAAOD,WAC3BX,MAAOS,IAAUG,OAAOD,WACxBV,QAAQQ,IAAUG,OAAOD,WACzBT,OAAQO,IAAUI,QAAQJ,IAAUG,QAAQD,YAGjCb,QCSAgB,MAjCf,WACI,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA6BF,mBAAS,IAAtC,mBAAQG,EAAR,KAAgBC,EAAhB,KAEMC,EAAS,uCAAG,8BAAA1B,EAAA,sEACSC,MAAM,wEADf,cACR0B,EADQ,gBAEKA,EAASzB,OAFd,OAERA,EAFQ,OAIduB,EAAUvB,EAAK0B,KAAKJ,QACpBD,GAAW,GALG,2CAAH,qDAaf,OALApB,qBAAU,WACNuB,MACF,IAIF,8BACKJ,EAAU,yCAAkB,8BAAME,EAAOZ,KAAI,SAACiB,GAAD,OAC5C,cAAC,EAAD,CAEEnC,GAAImC,EAAMnC,GACVW,SAAUwB,EAAMC,mBAChBxB,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAMrB,QALTqB,EAAMnC,YCXRqC,MATf,WACC,OAAO,cAAC,IAAD,UACH,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,aAAaC,QAAS,cAAC,EAAD,YCJ3CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.085a6015.chunk.js","sourcesContent":["import { useCallback } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { useEffect } from \"react/cjs/react.development\";\r\n\r\nfunction Detail() {\r\n    const {id} = useParams();\r\n    console.log(id);\r\n    \r\n    const getMoive = useCallback(async () => {\r\n        const json = await (\r\n            await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`))\r\n            .json();\r\n            console.log(json);\r\n    },[id])\r\n\r\n    useEffect(() => {\r\n        getMoive();\r\n    }, [getMoive]);\r\n\r\n    return <h1>Detail</h1>\r\n}\r\n\r\nexport default Detail;\r\n\r\n\r\n/*useCallback이 없다면 위 컴포넌트가 리렌더링 될때마다, 계속해서 getInitNoti함수를 만들게 되고, \r\n새로운 참조값을 받기 때문에 getInitNoti함수를 실행하게 됩니다.\r\n하지만 useCallback을 정의 하면 params가 바뀔때 만 getInitNoti가 실행되어, \r\n불필요한 함수 생성 및 실행을 막을 수 있습니다. */\r\n\r\n","import PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Movie({movieImg, title, summary, genres, id}){\r\n    return(\r\n    <div>\r\n        <img src={movieImg} alt={title}/>\r\n        <h2>\r\n            <Link to={`/movie/${id}`}>{title}</Link>\r\n        </h2>\r\n        <p>{summary}</p>\r\n        <ul>\r\n            {genres.map((g) => (\r\n            <li key={g}>{g}</li>\r\n            ))}               \r\n        </ul>\r\n    </div>\r\n    )\r\n}\r\nMovie.ropTypes = {\r\n    id:PropTypes.number.isRequired,\r\n    movieImg: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary:PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import { useEffect, useState } from \"react\";\r\nimport Movie from \"../components/Movie\";\r\n\r\nfunction Home() {\r\n    const [loading, setLoading] = useState(true);\r\n    const  [movies, setMovies] = useState([]);\r\n    \r\n    const getMovies = async() =>{\r\n        const response = await fetch(`https://yts.mx/api/v2/list_movies.json?minimum_rating=9&sort_by=year`)\r\n        const json = await response.json();\r\n\r\n        setMovies(json.data.movies);\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMovies();\r\n    },[])\r\n\r\n    \r\n    return (\r\n    <div>\r\n        {loading ? <h1>Loading</h1>: <div>{movies.map((movie) =>\r\n          <Movie \r\n            key={movie.id}\r\n            id={movie.id}\r\n            movieImg={movie.medium_cover_image}  \r\n            title={movie.title} \r\n            summary={movie.summary} \r\n            genres={movie.genres}/>\r\n         )}\r\n         </div>}\r\n    </div> \r\n    ) \r\n}\r\n\r\nexport default Home;","import {BrowserRouter as Router,Routes,Route  } from \"react-router-dom\";\r\nimport Detail from \"./routes/Detail\";\r\nimport Home from \"./routes/Home\";\r\n\r\nfunction App() {\r\n return <Router>\r\n     <Routes>\r\n         <Route path=\"/\" element={<Home/>}/>\r\n         <Route path=\"/movie/:id\" element={<Detail/>}/>\r\n     </Routes>\r\n </Router>;\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}